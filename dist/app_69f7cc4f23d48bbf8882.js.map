{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/js/GridCell.js","webpack:///./assets/js/Grid.js","webpack:///./assets/js/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","cellNumber","this","element","document","getElementById","Error","cellId","classList","add","remove","addEventListener","Sudoku","grid","changeActiveCell","gridCell","GridCell","registerEventHandlers","cells","push","cell","activeCell","makeInactive","makeActive","window","Grid","collectCells"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,SAIjBlC,EAAoBA,EAAoBmC,EAAI,G,4YCpCjD,WAAYC,GAKR,G,4FALoB,6BAzCX,MAyCW,iBAnCd,MAmCc,wBA7BR,GA6BQ,eAvBhB,MAuBgB,eAjBhB,WAiBgB,qBAXV,IAWU,qBALV,IAMVC,KAAKD,WAAaA,EAGlBC,KAAKC,QAAUC,SAASC,eAAT,oBAAqCJ,IAC/B,OAAjBC,KAAKC,QACL,MAAM,IAAIG,MAAJ,gCAAmCC,OAAnC,gB,4DASVL,KAAKC,QAAQK,UAAUC,IAAI,Y,qCAQ3BP,KAAKC,QAAQK,UAAUE,OAAO,Y,8CAOV,WACpBR,KAAKC,QAAQQ,iBAAiB,SAAS,WACnCC,OAAOC,KAAKC,iBAAiB,W,idCvE7B,I,oBAMK,M,8DAUT,IAHA,IAAIC,EAGK9C,EAAI,IAAKA,EAAI,KAClB8C,EAAW,IAAIC,EAAS/C,IACfgD,wBAETf,KAAKgB,MAAMC,KAAKJ,K,uCASPK,GAEW,OAApBlB,KAAKmB,YACLnB,KAAKmB,WAAWC,eAIpBF,EAAKG,aACLrB,KAAKmB,WAAaD,O,gCCzC1BI,OAAOZ,OAAS,GAEhBA,OAAOC,KAAO,IAAIY,EAClBb,OAAOC,KAAKa","file":"app_69f7cc4f23d48bbf8882.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class {\n    /**\n     * The cell number in the grid (1 through 81)\n     * @type {Number}\n     */\n    cellNumber = null;\n\n    /**\n     * The HTML element that is the cell\n     * @type {HTMLElement}\n     */\n    element = null;\n\n    /**\n     * Whether the cell value is set at the start\n     * @type {Boolean}\n     */\n    predetermined = false;\n\n    /**\n     * The value of the cell\n     * @type {Number}\n     */\n    value = null;\n\n    /**\n     * The background color of the cell\n     * @type {String}\n     */\n    color = '#ffffff';\n\n    /**\n     * The pencil mark values (corner mode)\n     * @type {Array}\n     */\n    cornerMarks = [];\n\n    /**\n     * The pencil mark values (center mode)\n     * @type {Array}\n     */\n    centerMarks = [];\n\n    /**\n     * @param cellNumber\n     */\n    constructor(cellNumber) {\n        this.cellNumber = cellNumber;\n\n        // The HTML cell element\n        this.element = document.getElementById(`grid-cell-${cellNumber}`);\n        if (this.element === null) {\n            throw new Error(`Cell element with ID '${cellId}' not found`);\n        }\n    }\n\n    /**\n     * Give the cell an active state\n     * @return {void}\n     */\n    makeActive() {\n        this.element.classList.add('active');\n    }\n\n    /**\n     * Remove the active state from the cell\n     * @return {void}\n     */\n    makeInactive() {\n        this.element.classList.remove('active');\n    }\n\n    /**\n     * Handle events that happen on/for the cell\n     * @return {void}\n     */\n    registerEventHandlers() {\n        this.element.addEventListener('click', () => {\n            Sudoku.grid.changeActiveCell(this);\n        });\n    }\n}\n","import GridCell from './GridCell';\n\nexport default class {\n    /**\n     * All the cells in the grid\n     * @type {Array}\n     */\n    cells = [];\n\n    /**\n     * The currently active (clicked) cell\n     * @type {GridCell}\n     */\n    activeCell = null;\n\n    /**\n     * Collect all the cell elements\n     * @return {void}\n     */\n    collectCells() {\n        let gridCell;\n\n        // Add all 81 cells\n        for (let i = 0; ++i < 82;) {\n            gridCell = new GridCell(i);\n            gridCell.registerEventHandlers();\n\n            this.cells.push(gridCell);\n        }\n    }\n\n    /**\n     * Change the currently active cell\n     * @param {GridCell} cell\n     * @return {void}\n     */\n    changeActiveCell(cell) {\n        // Make a current active cell inactive\n        if (this.activeCell !== null) {\n            this.activeCell.makeInactive();\n        }\n\n        // Make the given cell the active one\n        cell.makeActive();\n        this.activeCell = cell;\n    }\n}\n","import Grid from './Grid';\n\n// 'Namespace' of the project\nwindow.Sudoku = {};\n\nSudoku.grid = new Grid();\nSudoku.grid.collectCells();\n"],"sourceRoot":""}